<Application
    x:Class="Money.UI.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Money.Views.Controls"
    xmlns:converters="using:Money.Views.Converters"
    xmlns:viewModels="using:Money.ViewModels"
    xmlns:dd="using:Money.Views.DesignData">
    <Application.Resources>
        <dd:ViewModelLocator x:Key="ViewModelLocator" />

        <x:Double x:Key="SmallSize">0</x:Double>
        <x:Double x:Key="MediumSize">641</x:Double>
        <x:Double x:Key="LargeSize">1008</x:Double>

        <BitmapImage x:Key="IconSquare44" UriSource="/Assets/Square44x44Logo.scale-200.png" />
        <BitmapImage x:Key="CitySilhouetteImage" UriSource="/Assets/CitySilhouette.png" />

        <converters:BoolConverter x:Key="TrueToVisibleConverter" TrueValue="Visible" FalseValue="Collapsed" />
        <converters:DateToStringConverter x:Key="DateToStringConverter" />
        <converters:CuttingConverter x:Key="ZeroToVisibleConverter" EdgeValue="0" GreaterValue="Collapsed" LowerValue="Visible" />
        <converters:BoolConverter x:Key="TrueToFalseConverter" TrueValue="False" FalseValue="True" />
        <converters:ColorToColorConverter x:Key="ColorToColorConverter" />

        <BitmapImage x:Key="SquareLogo44Image" UriSource="/Assets/Square44x44Logo.scale-200.png" />

        <Style x:Key="NoteTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
        </Style>
        <Style x:Key="PriceStyle" TargetType="controls:Currency">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
        </Style>
        <Style x:Key="ErrorMessageStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,0,16" />
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>

        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}"/>
            <Setter Property="FocusVisualPrimaryThickness" Value="2"/>
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}"/>
            <Setter Property="FocusVisualSecondaryThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter 
                         CheckBrush="{ThemeResource ListViewItemCheckBrush}" 
                         ContentMargin="{TemplateBinding Padding}" 
                         CheckMode="{ThemeResource ListViewItemCheckMode}" 
                         ContentTransitions="{TemplateBinding ContentTransitions}" 
                         CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" 
                         DragForeground="{ThemeResource ListViewItemDragForeground}" 
                         DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                         DragBackground="{ThemeResource ListViewItemDragBackground}" 
                         DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                         FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                         FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" 
                         FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" 
                         FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
                         FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" 
                         FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" 
                         FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" 
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         Control.IsTemplateFocusTarget="True" 
                         PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" 
                         PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" 
                         PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
                         PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" 
                         ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                         SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" 
                         SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" 
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         
                         SelectedPressedBackground="{ThemeResource ButtonBackgroundPointerOver}" 
                         SelectedPointerOverBackground="{ThemeResource ButtonBackgroundPointerOver}" 
                         SelectedBackground="{ThemeResource ButtonBackgroundPointerOver}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyle}" />

        <Style TargetType="controls:MainMenuAppBarButton">
            <Setter Property="Background" Value="{ThemeResource AppBarToggleButtonBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource AppBarToggleButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Width" Value="68"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="AllowFocusOnInteraction" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarToggleButton">
                        <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}">
                            <Grid.Resources>
                                <Style x:Name="LabelOnRightStyle" TargetType="AppBarToggleButton">
                                    <Setter Property="Width" Value="NaN"/>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullSize"/>
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelOnRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentViewbox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="12,14,0,14"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="MinHeight" Storyboard.TargetName="ContentRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextAlignment" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="8,15,12,17"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="MinHeight" Storyboard.TargetName="ContentRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Overflow">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="CheckedHighlightBackground.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowCheckGlyph.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Visible"/>
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center"/>
                                            <Setter Target="ContentViewbox.MaxWidth" Value="16"/>
                                            <Setter Target="ContentViewbox.MaxHeight" Value="16"/>
                                            <Setter Target="ContentViewbox.Margin" Value="38,0,12,0"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="CheckedHighlightBackground.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowCheckGlyph.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPointerOver}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPressed}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarToggleButtonBackgroundDisabled}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushDisabled}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundDisabled}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundDisabled}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundDisabled}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushChecked}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundChecked}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPointerOver}"/>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPointerOver}"/>
                                            <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPointerOver}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPressed}"/>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPressed}"/>
                                            <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPressed}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedDisabled}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedDisabled}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedDisabled}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedDisabled}"/>
                                            <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedDisabled}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedDisabled}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowNormal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPointerOver}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPressed">
                                        <VisualState.Setters>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayPressed}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundPressed}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowChecked">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushChecked}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundChecked}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundChecked}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowCheckedPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPointerOver}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPointerOver}"/>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPointerOver}"/>
                                            <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPointerOver}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowCheckedPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarToggleButtonBorderBrushCheckedPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonForegroundCheckedPressed}"/>
                                            <Setter Target="OverflowCheckGlyph.Foreground" Value="{ThemeResource AppBarToggleButtonCheckGlyphForegroundCheckedPressed}"/>
                                            <Setter Target="AccentOverlayBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlayCheckedPressed}"/>
                                            <Setter Target="CheckedHighlightBackground.Fill" Value="{ThemeResource AppBarToggleButtonBackgroundCheckedPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarToggleButtonOverflowLabelForegroundCheckedPressed}"/>
                                            <!--<Setter Target="CheckedHighlightBackground.Opacity" Value="1"/>-->
                                            <Setter Target="OverflowCheckGlyph.Opacity" Value="1"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InputModeStates">
                                    <VisualState x:Name="InputModeDefault"/>
                                    <VisualState x:Name="TouchInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="0,11,0,13"/>
                                            <Setter Target="OverflowCheckGlyph.Margin" Value="12,12,12,12"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="GameControllerInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="0,11,0,13"/>
                                            <Setter Target="OverflowCheckGlyph.Margin" Value="12,12,12,12"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="CheckedHighlightBackground" Fill="{ThemeResource AppBarToggleButtonBackgroundChecked}" Opacity="0"/>
                            <Rectangle x:Name="AccentOverlayBackground" Fill="{ThemeResource AppBarToggleButtonBackgroundHighLightOverlay}"/>
                            <Grid x:Name="ContentRoot" MinHeight="{ThemeResource AppBarThemeMinHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="OverflowCheckGlyph" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource AppBarToggleButtonCheckGlyphForeground}" FontSize="16" FontFamily="{ThemeResource SymbolThemeFontFamily}" HorizontalAlignment="Left" Height="14" Margin="12,6,12,6" Opacity="0" Text="&#xE73E;" Visibility="Collapsed" VerticalAlignment="Center" Width="14"/>
                                <Viewbox x:Name="ContentViewbox" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Stretch" Height="20" Margin="0,14,0,4">
                                    <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}"/>
                                </Viewbox>
                                <TextBlock x:Name="TextLabel" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" Margin="2,0,2,6" Grid.Row="1" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Label}"/>
                                <TextBlock x:Name="OverflowTextLabel" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" FontSize="15" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" Margin="38,0,12,0" Padding="0,5,0,7" TextAlignment="Left" TextWrapping="NoWrap" Text="{TemplateBinding Label}" TextTrimming="Clip" Visibility="Collapsed" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="MinWidth" Value="{StaticResource SplitViewCompactPaneThemeLength}"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}"
                         Control.IsTemplateFocusTarget="True"
                         SelectionCheckMarkVisualEnabled="False"
                         PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                         PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                         SelectedBackground="Transparent"
                         SelectedForeground="{ThemeResource SystemControlForegroundAccentBrush}"
                         SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}"
                         PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                         SelectedPressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}"
                         DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         ContentMargin="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="MenuItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <FontIcon FontSize="16" Glyph="{Binding Icon}" ToolTipService.ToolTip="{Binding Label}"/>
                <TextBlock Text="{Binding Label}" Style="{StaticResource BodyTextBlockStyle}" TextWrapping="NoWrap" VerticalAlignment="Center" Grid.Column="1" />
            </Grid>
        </DataTemplate>
        <Style TargetType="controls:MainMenuListView">
            <Setter Property="ItemTemplate" Value="{StaticResource MenuItemTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MenuItemContainerStyle}" />
        </Style>

    </Application.Resources>
</Application>
