@page "/user/settings"
@attribute [Authorize]

<UserHead />

<div class="row my-4 mx-1">
    @foreach (var viewModel in ViewModels)
    {
        <div class="col-12 col-md-auto mb-4">
            <button class="btn btn-light text-truncate mw-100" @onclick="viewModel.Edit">
                @if (viewModel.Icon != null)
                {
                    <Icon Identifier="@viewModel.Icon" class="mr-1" />
                }

                <strong>
                    @(viewModel.Title + ": ")
                </strong>
                @(viewModel.Model?.Value ?? viewModel.DefaultValue)
            </button>
        </div>
    }
</div>

<Modal @ref="PriceDecimalsEditor" TitleIcon="@PriceDecimals.Icon" Title="Set price decimals">
    <ChildContent>
        <div class="form-group">
            <input type="text" class="form-control" @bind="PriceDecimals.CurrentValue" data-autofocus />
        </div>
    </ChildContent>
    <Buttons>
        <button class="btn btn-primary" @onclick="(async () => { await PriceDecimals.SetAsync(); PriceDecimalsEditor.Hide(); })">Set</button>
    </Buttons>
</Modal>

<Modal @ref="DateFormatEditor" TitleIcon="@DateFormat.Icon" Title="Set date format">
    <ChildContent>
        <div class="form-group">
            <input type="text" class="form-control" @bind="DateFormat.CurrentValue" data-autofocus />
        </div>
    </ChildContent>
    <Buttons>
        <button class="btn btn-primary" @onclick="(async () => { await DateFormat.SetAsync(); DateFormatEditor.Hide(); })">Set</button>
    </Buttons>
</Modal>

<Modal @ref="MobileMenuEditor" TitleIcon="@MobileMenu.Icon" Title="Modify mobile menu">
    <ChildContent>
        @if (MobileMenuAvailableModels != null && MobileSelectedIdentifiers != null)
        {
            foreach (var model in MobileMenuAvailableModels)
            {
                var isContained = MobileSelectedIdentifiers.Contains(model.Identifier);
                Action handler = isContained ? () => MobileSelectedIdentifiers.Remove(model.Identifier) : () => MobileSelectedIdentifiers.Add(model.Identifier);

                <div @key="model.Identifier" class="alert @(isContained ? "alert-primary" : "alert-light") cursor-pointer" @onclick="handler">
                    <Icon Identifier="@model.Icon" />
                    @model.Text
                </div>
            }
        }
    </ChildContent>
    <Buttons>
        <button class="btn btn-primary" @onclick="SetMobileMenuAsync">Set</button>
    </Buttons>
</Modal>